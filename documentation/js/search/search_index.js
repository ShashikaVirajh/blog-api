var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.12,1,1.894]],["body/controllers/AppController.html",[0,1.845,1,3.121,2,1.508,3,0.578,4,0.505,5,0.505,6,3.37,7,0.708,8,0.037,9,1.018,10,2.694,11,3.37,12,0.578,13,0.077,14,2.27,15,1.837,16,0.031,17,0.031]],["title/modules/AppModule.html",[18,1.12,19,1.894]],["body/modules/AppModule.html",[1,2.868,2,1.483,3,0.413,4,0.361,5,0.361,7,0.759,8,0.038,9,0.727,10,2.675,11,2.408,12,0.413,13,0.055,16,0.025,17,0.025,18,1.696,19,3.654,20,1.807,21,1.313,22,1.622,23,1.622,24,1.313,25,2.553,26,1.622,27,2.408,28,2.408,29,2.408,30,2.675,31,2.981,32,2.413,33,2.233,34,1.622,35,1.455,36,2.917,37,2.508,38,2.917,39,2.917,40,2.072,41,2.917,42,2.408]],["title/injectables/AppService.html",[10,1.513,43,1.12]],["body/injectables/AppService.html",[3,0.554,4,0.484,5,0.484,7,0.554,8,0.037,9,0.976,10,2.43,12,0.554,13,0.074,16,0.03,17,0.03,43,1.798,44,2.177,45,3.232,46,0.88,47,2.43,48,5.545,49,1.19,50,3.915,51,1.954,52,1.632,53,1.954,54,3.915,55,3.232]],["title/controllers/AuthController.html",[0,1.12,56,1.894]],["body/controllers/AuthController.html",[0,1.446,2,1.446,3,0.554,4,0.484,5,0.484,7,0.751,8,0.037,9,0.976,12,0.554,13,0.074,14,2.177,15,1.762,16,0.03,17,0.03,56,3.042,57,3.232,58,2.782,59,3.915,60,2.386,61,3.232,62,2.782,63,1.762,64,3.915,65,3.915]],["title/modules/AuthModule.html",[18,1.12,30,1.513]],["body/modules/AuthModule.html",[2,1.587,3,0.456,4,0.398,5,0.398,7,0.73,8,0.037,9,0.804,12,0.456,13,0.061,16,0.026,17,0.026,18,1.785,20,1.451,21,1.451,22,1.793,23,1.793,24,1.451,25,2.687,26,2.687,30,2.812,32,1.934,33,2.389,34,1.793,35,1.609,37,2.014,40,2.29,56,3.018,60,2.676,61,2.661,66,2.661,67,2.661,68,2.661,69,3.224,70,2.684,71,3.224]],["title/injectables/AuthService.html",[43,1.12,60,1.365]],["body/injectables/AuthService.html",[3,0.407,4,0.355,5,0.355,7,0.563,8,0.037,9,0.716,12,0.407,13,0.054,15,1.293,16,0.024,17,0.024,43,1.467,44,1.598,46,0.646,47,1.983,49,1.385,51,1.983,52,1.92,53,1.983,60,1.788,70,1.795,72,2.372,73,2.967,74,4.056,75,3.973,76,2.823,77,2.372,78,2.228,79,2.873,80,2.209,81,2.209,82,1.208,83,1.618,84,2.873,85,2.873,86,3.973,87,3.76,88,2.845,89,2.873,90,2.041,91,2.372,92,2.372,93,2.372,94,2.372,95,2.041,96,1.795,97,2.873,98,2.873,99,2.372]],["title/classes/CreatePostDto.html",[13,0.057,100,1.686]],["body/classes/CreatePostDto.html",[3,0.171,4,0.149,5,0.149,7,0.529,8,0.037,12,0.171,13,0.05,16,0.013,17,0.013,46,0.271,49,1.366,52,1.698,63,0.543,82,1.578,83,1.927,99,2.847,100,1.131,101,0.543,102,3.282,103,0.858,104,1.186,105,3.086,106,2.634,107,2.634,108,3.448,109,2.634,110,2.634,111,3.449,112,1.872,113,3.449,114,3.283,115,2.022,116,2.847,117,1.967,118,2.915,119,1.207,120,1.207,121,2.033,122,2.033,123,3.086,124,1.207,125,1.207,126,1.931,127,1.207,128,3.091,129,1.678,130,1.678,131,2.033,132,1.207,133,1.207,134,1.207,135,2.033,136,2.213,137,2.551,138,3.091,139,1.27,140,1.678,141,1.207,142,1.207,143,2.033,144,2.174,145,2.033,146,2.033,147,1.207,148,1.207,149,2.033,150,2.033,151,2.634,152,2.033,153,2.033,154,2.033,155,2.033,156,1.207,157,1.207,158,1.207,159,1.207,160,0.997,161,3.091,162,1.207,163,3.091,164,3.091,165,1.678,166,2.033,167,2.033,168,2.033,169,2.033,170,2.033,171,1.207,172,2.847,173,1.678,174,1.678,175,1.678,176,1.207,177,1.207,178,2.033,179,1.207,180,1.207,181,3.091,182,1.207,183,1.207,184,1.207,185,1.207,186,2.033,187,1.207,188,1.207,189,2.634,190,1.207,191,2.033,192,2.033,193,2.155,194,2.826,195,2.451,196,2.033,197,0.997,198,0.997,199,0.997,200,2.033,201,0.602,202,0.671,203,0.858,204,1.207,205,0.858,206,2.847,207,3.283,208,1.207,209,1.207,210,2.033,211,0.997,212,1.207,213,1.207,214,1.207,215,1.207,216,1.207,217,1.207,218,1.207,219,1.207,220,1.207,221,1.207,222,0.997,223,1.207,224,0.997,225,1.445,226,0.997,227,1.207,228,1.645]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.057,126,1.894]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.503,4,0.439,5,0.439,7,0.503,8,0.037,12,0.503,13,0.086,16,0.028,17,0.028,46,0.799,49,1.392,52,1.534,82,1.392,101,1.599,102,3.6,104,2.061,115,2.061,117,2.064,126,2.86,193,3.343,195,3.253,201,1.773,203,3.6,225,3.6,228,3.165,229,2.932,230,3.552,231,3.552,232,3.552]],["title/classes/CreateUserDto.html",[13,0.057,233,1.686]],["body/classes/CreateUserDto.html",[3,0.375,4,0.327,5,0.327,7,0.375,8,0.036,12,0.375,13,0.071,16,0.023,17,0.023,46,0.595,49,1.441,52,1.83,82,1.441,83,1.527,87,3.596,90,3.095,101,1.19,104,1.688,115,2.133,165,3.095,193,2.96,194,2.664,195,3.367,197,2.183,198,2.183,199,2.183,201,1.32,222,4.29,224,3.095,233,2.085,234,4.13,235,1.879,236,3.596,237,4.356,238,2.645,239,2.645,240,2.645,241,2.645,242,2.645,243,2.645,244,2.645,245,4.739,246,3.75,247,3.75,248,3.75,249,3.75,250,3.75,251,3.75,252,2.085,253,3.75,254,3.75,255,2.645,256,3.75,257,4.739,258,2.645,259,2.645]],["title/classes/GetUsersParamDto.html",[13,0.057,260,1.686]],["body/classes/GetUsersParamDto.html",[3,0.449,4,0.392,5,0.392,7,0.679,8,0.037,12,0.449,13,0.09,16,0.026,17,0.026,46,0.713,49,0.964,52,1.062,63,1.427,82,1.457,83,1.731,88,3.334,96,2.654,101,1.427,104,1.912,115,1.427,116,2.617,118,2.363,136,1.427,194,3.019,201,1.582,205,2.252,207,3.507,228,1.98,252,2.847,260,2.363,261,3.507,262,2.654,263,2.617,264,4.249,265,3.17,266,3.17,267,3.507,268,2.617,269,3.17,270,3.17,271,3.17,272,3.17,273,3.17,274,3.17,275,3.17,276,3.17]],["title/classes/PatchPostDto.html",[13,0.057,277,1.686]],["body/classes/PatchPostDto.html",[3,0.474,4,0.414,5,0.414,7,0.697,8,0.037,12,0.474,13,0.083,16,0.027,17,0.027,46,0.753,49,1.019,63,1.508,82,1.019,88,3.396,100,1.863,101,1.508,103,2.38,104,1.984,115,1.508,117,1.795,118,2.451,136,1.508,160,2.766,193,2.753,201,1.672,202,1.863,206,3.638,252,2.451,267,3.638,277,2.451,278,3.638,279,3.638,280,4.407,281,4.407,282,3.638,283,3.35,284,3.35,285,2.766,286,2.38,287,2.38]],["title/classes/PatchUserDto.html",[13,0.057,288,1.894]],["body/classes/PatchUserDto.html",[3,0.578,4,0.505,5,0.505,7,0.708,8,0.037,12,0.578,13,0.077,16,0.031,17,0.031,101,1.837,202,2.27,233,2.27,235,2.9,279,4.125,285,3.37,288,3.121,289,3.37,290,4.997,291,3.37,292,3.37,293,3.37]],["title/controllers/PostsController.html",[0,1.12,294,1.894]],["body/controllers/PostsController.html",[0,0.778,2,0.778,3,0.298,4,0.26,5,0.26,7,0.646,8,0.037,9,0.525,12,0.298,13,0.04,14,1.172,15,0.948,16,0.02,17,0.02,46,0.474,47,1.584,49,1.162,51,1.906,52,1.425,53,1.906,58,1.497,62,1.497,63,0.948,73,2.915,80,2.124,81,2.124,82,1.162,83,1.556,100,2.667,112,2.256,115,1.72,117,2.135,123,3.511,136,1.914,202,1.172,277,2.667,282,2.621,286,2.256,294,1.983,295,1.739,296,2.107,297,3.175,298,3.175,299,3.175,300,2.107,301,3.175,302,3.175,303,2.256,304,3.175,305,4.253,306,4.253,307,3.175,308,2.107,309,2.107,310,2.107,311,3.175,312,2.107,313,2.621,314,2.107,315,2.621,316,3.175,317,3.511,318,2.107,319,2.107,320,1.739,321,1.739,322,2.621,323,1.906,324,1.739,325,3.154,326,3.154,327,1.739,328,1.497,329,2.107,330,2.107,331,2.107,332,2.107,333,2.621,334,2.621,335,2.107,336,2.107,337,1.739,338,2.107,339,2.107]],["title/modules/PostsModule.html",[18,1.12,31,1.686]],["body/modules/PostsModule.html",[2,1.609,3,0.466,4,0.407,5,0.407,7,0.736,8,0.037,9,0.821,12,0.466,13,0.062,16,0.027,17,0.027,18,1.804,20,1.482,21,1.482,22,1.831,23,1.831,24,1.482,25,2.716,26,1.831,31,3.198,32,2.5,33,2.423,34,1.831,35,1.643,37,2.722,40,2.34,294,3.05,323,2.772,324,2.718,340,2.718,341,3.293,342,2.718,343,3.293,344,3.293]],["title/injectables/PostsService.html",[43,1.12,323,1.513]],["body/injectables/PostsService.html",[3,0.387,4,0.337,5,0.337,7,0.628,8,0.038,9,0.68,12,0.387,13,0.051,14,1.518,15,1.229,16,0.024,17,0.024,43,1.416,44,1.518,46,0.614,47,1.913,49,1.347,51,1.913,52,1.485,53,1.362,73,2.919,76,1.94,77,2.253,78,2.138,80,2.464,81,2.464,82,1.347,83,1.805,92,2.253,95,1.94,96,2.768,105,3.967,114,3.165,117,1.958,277,2.815,286,1.94,287,2.724,313,2.253,323,1.913,328,1.94,345,2.253,346,3.165,347,3.165,348,2.73,349,3.834,350,2.73,351,3.834,352,2.73,353,2.73,354,2.73,355,3.834]],["title/controllers/UsersController.html",[0,1.12,356,1.894]],["body/controllers/UsersController.html",[0,0.579,2,0.579,3,0.222,4,0.194,5,0.194,7,0.601,8,0.037,9,0.391,12,0.222,13,0.029,14,0.872,15,0.706,16,0.016,17,0.016,46,0.353,47,1.258,49,1.207,51,1.982,52,1.554,53,2.225,58,1.114,62,1.114,63,0.706,73,2.966,78,1.027,80,1.759,81,2.208,82,1.356,83,1.288,96,2.264,112,1.114,115,1.788,117,1.288,118,2.015,129,2.992,130,2.992,136,1.909,139,2.897,202,0.872,233,2.48,252,2.93,260,2.359,262,2.65,287,1.792,288,2.786,291,2.082,303,1.792,317,2.082,320,1.294,321,2.082,322,2.992,325,2.082,326,2.082,327,1.294,328,1.114,333,1.294,334,2.082,337,2.992,347,1.294,356,1.575,357,1.294,358,2.522,359,3.624,360,3.163,361,2.522,362,3.624,363,1.568,364,1.568,365,3.624,366,1.568,367,1.568,368,3.502,369,1.568,370,2.522,371,2.522,372,2.522,373,1.568,374,2.522,375,2.082,376,1.568,377,2.522,378,2.522,379,2.522,380,3.624,381,1.568,382,2.522,383,2.522,384,2.522,385,1.568,386,1.568,387,1.568,388,3.163,389,1.568,390,1.568,391,3.163,392,1.294,393,1.294,394,1.294,395,3.163,396,1.568,397,1.568,398,1.568,399,1.568,400,1.294,401,1.568,402,1.568,403,1.568,404,1.568,405,1.568,406,1.568,407,1.568,408,1.568,409,1.568,410,1.568]],["title/modules/UsersModule.html",[18,1.12,32,1.365]],["body/modules/UsersModule.html",[2,1.587,3,0.456,4,0.398,5,0.398,7,0.73,8,0.037,9,0.804,12,0.456,13,0.061,16,0.026,17,0.026,18,1.785,20,1.451,21,1.451,22,1.793,23,1.793,24,1.451,25,2.687,26,2.687,30,2.144,32,2.537,33,2.389,34,1.793,35,1.609,37,2.014,42,2.661,70,2.684,78,2.421,356,3.018,394,2.661,411,2.661,412,2.661,413,2.661,414,3.224,415,3.224]],["title/injectables/UsersService.html",[43,1.12,78,1.235]],["body/injectables/UsersService.html",[3,0.348,4,0.304,5,0.304,7,0.592,8,0.038,9,0.613,12,0.348,13,0.046,15,1.106,16,0.022,17,0.022,43,1.314,44,1.367,46,0.553,47,1.775,49,1.271,51,1.775,52,1.63,53,1.775,60,2.354,70,1.536,73,2.82,74,2.029,76,2.528,78,1.449,80,2.325,81,2.325,82,1.271,83,1.703,88,2.612,90,3.257,91,2.029,93,2.029,94,2.029,95,1.747,139,2.612,236,3.783,252,2.908,260,2.82,262,1.536,268,2.029,346,3.452,368,3.452,392,2.029,393,2.029,416,2.029,417,3.558,418,2.458,419,2.458,420,2.458,421,2.458,422,3.558,423,2.458,424,2.458,425,2.458,426,2.458,427,2.458,428,3.558,429,3.558]],["title/coverage.html",[430,2.929]],["body/coverage.html",[0,1.809,1,1.781,5,0.353,6,2.354,8,0.037,10,1.423,13,0.1,16,0.024,17,0.024,24,1.284,43,1.809,45,2.354,56,1.781,57,2.354,60,1.284,72,2.354,78,1.162,82,0.867,100,1.586,102,2.808,103,2.808,117,1.162,126,1.781,203,2.026,226,2.354,229,2.354,233,1.586,234,2.354,235,2.808,260,1.586,261,2.354,262,1.781,263,2.354,277,1.586,278,2.354,288,1.781,289,2.354,294,1.781,295,2.354,303,2.026,323,1.423,345,2.354,356,1.781,357,2.354,416,2.354,430,2.026,431,2.354,432,2.852,433,5.941,434,4.898,435,4.537,436,4.898,437,2.354,438,2.852,439,2.852,440,2.852,441,2.852,442,2.852,443,2.852,444,2.852]],["title/dependencies.html",[21,1.639,445,2.096]],["body/dependencies.html",[8,0.038,9,0.971,13,0.091,16,0.03,17,0.03,21,1.753,63,1.753,201,1.944,205,2.768,292,3.216,293,3.216,446,3.895,447,3.895,448,5.288,449,3.895,450,3.895,451,3.895,452,3.895,453,3.895,454,3.895,455,3.895,456,3.895,457,3.895,458,3.895,459,3.895,460,3.895]],["title/miscellaneous/enumerations.html",[461,1.586,462,3.007]],["body/miscellaneous/enumerations.html",[8,0.037,16,0.029,17,0.029,46,0.829,108,3.872,117,1.911,139,2.93,140,3.872,144,3.872,172,3.872,173,3.872,174,3.872,175,3.872,211,3.872,228,3.679,461,2.304,462,3.045,463,4.691,464,4.691,465,4.691,466,4.691]],["title/miscellaneous/functions.html",[461,1.586,467,3.007]],["body/miscellaneous/functions.html",[8,0.033,16,0.033,17,0.033,24,2.544,46,1.021,437,3.749,461,2.837,467,3.749,468,4.542]],["title/index.html",[46,0.571,469,2.539,470,2.539]],["body/index.html",[4,0.236,8,0.035,16,0.018,17,0.018,35,2.304,55,4.101,118,2.249,136,0.861,137,1.579,225,1.359,315,1.579,375,1.579,400,3.811,430,1.359,431,2.434,471,1.912,472,1.912,473,3.599,474,2.949,475,1.912,476,1.912,477,1.912,478,1.912,479,2.949,480,3.599,481,1.912,482,1.912,483,1.912,484,4.045,485,1.912,486,4.969,487,1.912,488,4.812,489,1.912,490,1.912,491,1.912,492,2.949,493,1.912,494,2.949,495,1.912,496,3.599,497,1.912,498,2.949,499,1.912,500,1.912,501,1.912,502,1.912,503,1.912,504,4.045,505,2.949,506,1.912,507,1.912,508,1.912,509,1.912,510,4.617,511,2.949,512,4.045,513,1.912,514,2.949,515,1.912,516,2.949,517,4.617,518,4.045,519,1.912,520,2.949,521,1.912,522,1.912,523,1.912,524,1.912,525,4.045,526,1.912,527,1.912,528,1.912,529,1.912,530,2.949,531,1.912,532,1.912,533,1.912,534,1.912,535,1.912,536,2.949,537,1.912,538,1.912,539,1.912,540,2.949,541,1.912,542,1.912,543,3.339,544,2.949,545,1.912,546,1.912,547,1.912,548,1.912,549,1.912,550,1.912,551,1.912,552,1.912,553,2.949,554,1.912,555,1.912,556,1.912,557,1.912,558,3.599,559,1.912,560,1.912,561,1.912,562,1.912,563,1.912,564,1.912,565,2.949,566,1.912,567,1.912,568,1.912,569,1.912,570,2.949,571,1.912,572,1.912,573,1.912,574,2.949,575,2.949,576,1.912,577,1.912,578,1.912,579,1.912,580,1.912,581,1.912,582,1.912,583,1.912,584,1.912,585,1.912,586,1.912,587,1.579,588,1.912,589,1.912,590,1.912,591,1.912,592,1.912,593,1.912,594,1.579]],["title/modules.html",[20,1.856]],["body/modules.html",[8,0.031,16,0.031,17,0.031,19,2.634,20,1.898,30,2.104,31,2.345,32,1.898,543,4.696,595,5.689,596,5.689,597,5.689]],["title/overview.html",[598,3.403]],["body/overview.html",[2,1.124,8,0.036,10,2.342,16,0.025,17,0.025,18,1.124,19,3.618,20,1.37,21,1.37,22,1.693,23,1.693,24,1.37,25,1.693,26,1.693,27,2.513,28,2.513,29,2.513,30,2.709,31,3.088,32,2.5,33,2.299,34,1.693,35,1.519,44,1.693,60,2.5,66,2.513,67,2.513,68,2.513,78,2.262,101,1.37,323,2.342,340,2.513,342,2.513,411,2.513,412,2.513,413,2.513,598,2.513,599,4.694,600,3.044]],["title/properties.html",[104,1.639,445,2.096]],["body/properties.html",[8,0.037,16,0.032,17,0.032,104,2.009,136,2.009,587,3.684,594,3.684,601,4.463,602,4.463,603,4.463]],["title/routes.html",[604,3.403]],["body/routes.html",[8,0.034,16,0.034,17,0.034,604,3.911]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":602,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":287,"title":{},"body":{"classes/PatchPostDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["1.1.26",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["12345",{"_index":268,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UsersService.html":{}}}],["12345})@isoptional()@isint()@type(undefined",{"_index":265,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["16t07:46:32+0000",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["16t07:46:32+0000'})@isiso8601()@isoptional",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1})@isint()@isnotempty",{"_index":283,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["2",{"_index":355,"title":{},"body":{"injectables/PostsService.html":{}}}],["2.0.5",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":599,"title":{},"body":{"overview.html":{}}}],["6",{"_index":600,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["allowing",{"_index":531,"title":{},"body":{"index.html":{}}}],["always",{"_index":272,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["amazing",{"_index":580,"title":{},"body":{"index.html":{}}}],["api",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({example",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('posts",{"_index":330,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":479,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["auth/providers/auth.service",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["authcontroller",{"_index":56,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":587,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":60,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":274,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["aws",{"_index":520,"title":{},"body":{"index.html":{}}}],["backers",{"_index":581,"title":{},"body":{"index.html":{}}}],["based",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["blog",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["board",{"_index":573,"title":{},"body":{"index.html":{}}}],["body",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":597,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":595,"title":{},"body":{"modules.html":{}}}],["building",{"_index":474,"title":{},"body":{"index.html":{}}}],["channel",{"_index":546,"title":{},"body":{"index.html":{}}}],["character",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":510,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":101,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":530,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":515,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":340,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":341,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":342,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":411,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":413,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":412,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":537,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["console.log('createuserdto",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('patchuserdto",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(createpostdto",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":105,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["content'})@isstring()@isoptional",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["context",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":552,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":430,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["created",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":100,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":126,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuser",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":233,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["custom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":548,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":49,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":504,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":519,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":511,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":529,"title":{},"body":{"index.html":{}}}],["description",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":489,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":560,"title":{},"body":{"index.html":{}}}],["discord",{"_index":545,"title":{},"body":{"index.html":{}}}],["dive",{"_index":547,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":431,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":499,"title":{},"body":{"index.html":{}}}],["each",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":475,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":509,"title":{},"body":{"index.html":{}}}],["eight",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":507,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":564,"title":{},"body":{"index.html":{}}}],["entries",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":462,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/post",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["existing",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{}}}],["experience",{"_index":550,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":279,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["fast",{"_index":523,"title":{},"body":{"index.html":{}}}],["featured",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":533,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":264,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["fetched",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":525,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":346,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":349,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":532,"title":{},"body":{"index.html":{}}}],["follow",{"_index":567,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":473,"title":{},"body":{"index.html":{}}}],["full",{"_index":563,"title":{},"body":{"index.html":{}}}],["function",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":467,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":528,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":48,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":331,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":469,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":260,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":555,"title":{},"body":{"index.html":{}}}],["grow",{"_index":577,"title":{},"body":{"index.html":{}}}],["hands",{"_index":549,"title":{},"body":{"index.html":{}}}],["handy",{"_index":538,"title":{},"body":{"index.html":{}}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":553,"title":{},"body":{"index.html":{}}}],["here",{"_index":585,"title":{},"body":{"index.html":{}}}],["http://localhost.com/images/image1.jpg",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["http://localhost.com/images/image1.jpg'})@isoptional()@isurl()@maxlength(1024",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":591,"title":{},"body":{"index.html":{}}}],["https://schema.org",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://schema.org\",\\r\\n",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["ids",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["image",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":513,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":535,"title":{},"body":{"index.html":{}}}],["inject",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":43,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":527,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":487,"title":{},"body":{"index.html":{}}}],["interact",{"_index":556,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauthenticated",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty()@maxlength(96",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":267,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isjson",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":230,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@maxlength(96)@matches(/^(?=.*[a",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jane",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["jane@gmail.com",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["job",{"_index":570,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":572,"title":{},"body":{"index.html":{}}}],["john",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@gmail.com",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":583,"title":{},"body":{"index.html":{}}}],["json",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":588,"title":{},"body":{"index.html":{}}}],["key",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["lastname",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":541,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":594,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":575,"title":{},"body":{"index.html":{}}}],["limit",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":569,"title":{},"body":{"index.html":{}}}],["list",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":514,"title":{},"body":{"index.html":{}}}],["loop",{"_index":566,"title":{},"body":{"index.html":{}}}],["makes",{"_index":521,"title":{},"body":{"index.html":{}}}],["managing",{"_index":534,"title":{},"body":{"index.html":{}}}],["matches",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["mau",{"_index":517,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(1024",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["maxlength(256",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["maxlength(512",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["maxlength(96",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":461,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":574,"title":{},"body":{"index.html":{}}}],["mode",{"_index":492,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":512,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":589,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":561,"title":{},"body":{"index.html":{}}}],["needs",{"_index":281,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":480,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":593,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":292,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":472,"title":{},"body":{"index.html":{}}}],["number",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":571,"title":{},"body":{"index.html":{}}}],["official",{"_index":518,"title":{},"body":{"index.html":{}}}],["one",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["open",{"_index":576,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options.dto",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":229,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":231,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":232,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":598,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":445,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":263,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:15",{"_index":266,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":270,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parseintpipe",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":562,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":285,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":280,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":290,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":277,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["patchuser",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":288,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["person",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["person\"\\r\\n",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["platform",{"_index":516,"title":{},"body":{"index.html":{}}}],["please",{"_index":544,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":486,"title":{},"body":{"index.html":{}}}],["position",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isstring()@isnotempty()@maxlength(256)@matches(/^[a",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@minlength(4)@maxlength(512)@isnotempty",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":286,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:104",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:129",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:13",{"_index":284,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:30",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:38",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:51",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:59",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:67",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:77",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:86",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:94",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":344,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":294,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":323,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":494,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":471,"title":{},"body":{"index.html":{}}}],["project",{"_index":484,"title":{},"body":{"index.html":{}}}],["properties",{"_index":104,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published''})@isenum(poststatus)@isnotempty",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["queries",{"_index":271,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["query",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["query'})@apiquery({name",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":542,"title":{},"body":{"index.html":{}}}],["r\\n",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["read",{"_index":584,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":503,"title":{},"body":{"index.html":{}}}],["real",{"_index":557,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":483,"title":{},"body":{"index.html":{}}}],["request",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["required",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":524,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":536,"title":{},"body":{"index.html":{}}}],["response",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["routes",{"_index":604,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":488,"title":{},"body":{"index.html":{}}}],["runs",{"_index":508,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":476,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["serialize",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isenum(posttype)@isnotempty",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":477,"title":{},"body":{"index.html":{}}}],["setup",{"_index":485,"title":{},"body":{"index.html":{}}}],["side",{"_index":478,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["simple",{"_index":526,"title":{},"body":{"index.html":{}}}],["slug",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sponsors",{"_index":579,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post",{"_index":463,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":50,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:17",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":278,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/post",{"_index":466,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:25",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:38",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":343,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":345,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:26",{"_index":352,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:6",{"_index":348,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:9",{"_index":350,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":261,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":289,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:12",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:31",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:48",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:63",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:74",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":414,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":490,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":493,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":495,"title":{},"body":{"index.html":{}}}],["started",{"_index":470,"title":{"index.html":{}},"body":{}}],["starter",{"_index":482,"title":{},"body":{"index.html":{}}}],["statements",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["status.enum",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["status.enum.ts",{"_index":464,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":565,"title":{},"body":{"index.html":{}}}],["steps",{"_index":505,"title":{},"body":{"index.html":{}}}],["story",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":522,"title":{},"body":{"index.html":{}}}],["string",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["strings",{"_index":273,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["successfully",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully'})@post",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":333,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":543,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":596,"title":{},"body":{"modules.html":{}}}],["table",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":506,"title":{},"body":{"index.html":{}}}],["test",{"_index":498,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":501,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":500,"title":{},"body":{"index.html":{}}}],["tests",{"_index":496,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":578,"title":{},"body":{"index.html":{}}}],["this.authservice.isauthenticated",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(userid",{"_index":332,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.update(patchpostdto",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.userservice.findall(getusersparamdto",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('12345",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":354,"title":{},"body":{"injectables/PostsService.html":{}}}],["thrown",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["time",{"_index":558,"title":{},"body":{"index.html":{}}}],["title",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":586,"title":{},"body":{"index.html":{}}}],["transform",{"_index":269,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["transformation",{"_index":275,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["transformer",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":592,"title":{},"body":{"index.html":{}}}],["two",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type.enum",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type.enum.ts",{"_index":465,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":293,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":481,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":497,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":603,"title":{},"body":{"properties.html":{}}}],["update",{"_index":347,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["update(patchpostdto",{"_index":351,"title":{},"body":{"injectables/PostsService.html":{}}}],["updated",{"_index":282,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["updatepost",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["updateuser",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["user.dto",{"_index":291,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":262,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":415,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/providers/users.service",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["users/users.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["userscontroller",{"_index":356,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":78,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":559,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validator",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/GetUsersParamDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":601,"title":{},"body":{"properties.html":{}}}],["video",{"_index":551,"title":{},"body":{"index.html":{}}}],["visit",{"_index":540,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":554,"title":{},"body":{"index.html":{}}}],["void",{"_index":353,"title":{},"body":{"injectables/PostsService.html":{}}}],["want",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":491,"title":{},"body":{"index.html":{}}}],["website",{"_index":590,"title":{},"body":{"index.html":{}}}],["without",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["work",{"_index":276,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["working",{"_index":539,"title":{},"body":{"index.html":{}}}],["x",{"_index":568,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":582,"title":{},"body":{"index.html":{}}}],["you're",{"_index":502,"title":{},"body":{"index.html":{}}}],["z0",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AppService } from './app.service';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\n\n/** Custom modules */\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello From NestJS!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  imports: [forwardRef(() => UsersModule)],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from '../../users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findOneById('12345');\n\n    return 'SAMPLE_TOKEN';\n  }\n\n  public isAuthenticated() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the content of the post', example: 'The post content'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Featured image for your blog post', example: 'http://localhost.com/images/image1.jpg'})@IsOptional()@IsUrl()@MaxLength(1024)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostType, description: 'Possible values, 'post', 'page', 'story', 'series''})@IsEnum(PostType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The date on which the blog post is published', example: '2024-03-16T07:46:32+0000'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialize your JSON object else a validation error will be thrown', example: '{\n \"@context\": \"https://schema.org\",\n \"@type\": \"Person\"\n }'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'For Example - 'my-url'', example: 'my-blog-post'})@IsString()@IsNotEmpty()@MaxLength(256)@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PostStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: PostStatus, description: 'Possible values 'draft', 'scheduled', 'review', 'published''})@IsEnum(PostStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of ids of tags', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This is a title', description: 'This is the title of the post'})@IsString()@MinLength(4)@MaxLength(512)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PostType } from '../enums/post-type.enum';\nimport { PostStatus } from '../enums/post-status.enum';\nimport {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MaxLength,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    example: 'This is a title',\n    description: 'This is the title of the post',\n  })\n  @IsString()\n  @MinLength(4)\n  @MaxLength(512)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: PostType,\n    description: \"Possible values, 'post', 'page', 'story', 'series'\",\n  })\n  @IsEnum(PostType)\n  @IsNotEmpty()\n  postType: PostType;\n\n  @ApiProperty({\n    description: \"For Example - 'my-url'\",\n    example: 'my-blog-post',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(256)\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    enum: PostStatus,\n    description: \"Possible values 'draft', 'scheduled', 'review', 'published'\",\n  })\n  @IsEnum(PostStatus)\n  @IsNotEmpty()\n  status: PostStatus;\n\n  @ApiPropertyOptional({\n    description: 'This is the content of the post',\n    example: 'The post content',\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Serialize your JSON object else a validation error will be thrown',\n    example:\n      '{\\r\\n \"@context\": \"https://schema.org\",\\r\\n \"@type\": \"Person\"\\r\\n }',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'Featured image for your blog post',\n    example: 'http://localhost.com/images/image1.jpg',\n  })\n  @IsOptional()\n  @IsUrl()\n  @MaxLength(1024)\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'The date on which the blog post is published',\n    example: '2024-03-16T07:46:32+0000',\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: string;\n\n  @ApiPropertyOptional({\n    description: 'Array of ids of tags',\n    example: ['one', 'two'],\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'The key can be any string identifier',\n          example: 'sidebarEnabled',\n        },\n        value: {\n          type: 'any',\n          description: 'The value can be any value',\n          example: true,\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@MaxLength(96)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @MaxLength(96)\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @MaxLength(96)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Fetch a user with the id', example: 12345})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Fetch a user with the id',\n    example: 12345,\n  })\n  @IsOptional()\n  @IsInt()\n  // Transform the string value to number as params and queries are always strings.\n  // So auto transformation does not work.\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the post that needs to be updated', example: 1})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nimport { CreatePostDto } from './create-post.dto';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The ID of the post that needs to be updated',\n    example: 1,\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from './create-user.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog post'})@ApiResponse({status: 201, description: 'You get a 201 response if your post is created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates an existing blog post'})@ApiResponse({status: 200, description: 'A 200 response if the post is updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Creates a new blog post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You get a 201 response if your post is created successfully',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n    return 'Create Post Request';\n  }\n\n  @ApiOperation({\n    summary: 'Updates an existing blog post',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'A 200 response if the post is updated successfully',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostDto: PatchPostDto) {\n    return this.postsService.update(patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(patchPostDto: PatchPostDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../../users/providers/users.service';\nimport { PatchPostDto } from '../dtos/patch-post.dto';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UsersService) {}\n\n  public findAll(userId: string) {\n    const user = this.usersService.findOneById(userId);\n\n    return [\n      {\n        user,\n        title: 'Post 1',\n        content: 'Post 1 content',\n      },\n      {\n        user,\n        title: 'Post 2',\n        content: 'Post 2 content',\n      },\n    ];\n  }\n\n  public update(patchPostDto: PatchPostDto) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                UpdateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the application'})@ApiResponse({status: 200, description: 'Users fetched successfully based on the query'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number that you want the API to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        UpdateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the application',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Users fetched successfully based on the query',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description:\n      'The position of the page number that you want the API to return',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.userService.findAll(getUsersParamDto, limit, page);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto): string {\n    console.log('createUserDto:', createUserDto);\n    return 'Create User Request';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto): string {\n    console.log('patchUserDto:', patchUserDto);\n    return 'Patch User Request';\n  }\n\n  @Put()\n  public UpdateUser(): string {\n    return 'Update User Request';\n  }\n\n  @Delete()\n  public deleteUser(): string {\n    return 'Delete User Request';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  imports: [forwardRef(() => AuthModule)],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from '../../auth/providers/auth.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuthenticated = this.authService.isAuthenticated();\n\n    return [\n      {\n        firstName: 'John',\n        email: 'john@gmail.com',\n      },\n      {\n        firstName: 'Jane',\n        email: 'jane@gmail.com',\n      },\n    ];\n  }\n\n  public findOneById(id: string) {\n    return {\n      id: 12345,\n      firstName: 'Jane',\n      email: 'jane@gmail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : 2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : 7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : 0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostStatus   (src/.../post-status.enum.ts)\n                        \n                        \n                            PostType   (src/.../post-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/post-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/post-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
